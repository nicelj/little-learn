/***
 * 享元模式: 是一种用于性能优化的模式。
 * 其核心是运用共享技术来有效支持大量的细粒度的对象。
 *
 * 享元模式要求将对象的属性划分为'内部状态'和'外部状态',尽量减少共享对象的数量。
 * 1. 内部状态存储于对象内部。
 * 2. 内部状态可以被一些对象共享。
 * 3. 内部状态独立于具体的场景,通常不会改变。
 * 4. 外部状态取决于具体的场景,通常会改变,不能被共享。
 *
 * 这样,就可以把内部状态相同的对象指定为同一共享对象,外部状态在必要时传入共享对象来组装成一个完整的对象。
 * 组装对象会耗费一点时间,但是可以大大减少系统中对象的数量从而优化性能,因此它是一种以时间换空间的优化模式。
 * */

/***
 * 享元模式的适用场景:
 * 1. 系统中存在大量的相似对象。
 * 2. 由于使用了大量对象,造成了性能问题,此时要考虑能不能使用享元模式重构。
 * 3. 对象的大多数状态都可以变为外部状态。
 * 4. 剥离对象的外部状态后,可以用较少的共享对象取代大量的对象。
 * */


// P186!